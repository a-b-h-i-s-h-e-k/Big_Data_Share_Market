
services:


  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - '29092:29092'
    environment:
      CLUSTER_ID: '${CLUSTER_ID:-YzUyZWRlYzBhNDkwNDNmNG}'
      KAFKA_NODE_ID: '1'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENERS: 'INTERNAL://kafka:9092,EXTERNAL://kafka:29092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1  # this and the next 2 properties are needed by other kafka components you are currently not using
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
      KAFKA_LOG4J_LOGGERS: "\
        kafka=WARN,\
        kafka.controller=WARN,\
        kafka.log.LogCleaner=WARN,\
        state.change.logger=WARN,\
        kafka.producer.async.DefaultEventHandler=WARN"

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      LOGGING_LEVEL_ROOT: 'ERROR'
      LOGGING_LEVEL_COM_PROVECTUS: 'WARN'
    depends_on:
      - kafka

  postgres:
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: finance_db
    volumes:
    - ./postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:8.4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
    - ./pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    depends_on:
      - postgres

  flink-jobmanager:
    image: flink:1.13.2-scala_2.12
    ports:
      - "8081:8081"
    profiles:
      - disabled
    volumes:
      - ./flink_processor/flink-sql-connector-kafka-3.1.0-1.18-sources.jar:/opt/flink/lib/flink-sql-connector-kafka-3.1.0-1.18-sources.jar
      - ./flink_processor/config.yaml:/opt/flink/conf/flink-conf.yaml
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    command: jobmanager
    depends_on:
      - kafka

  flink-taskmanager:
    image: flink:1.13.2-scala_2.12
    profiles:
      - disabled
    volumes:
      - ./flink_processor/flink-sql-connector-kafka-3.1.0-1.18-sources.jar:/opt/flink/lib/flink-sql-connector-kafka-3.1.0-1.18-sources.jar
      - ./flink_processor/config.yaml:/opt/flink/conf/flink-conf.yaml
    environment:
      - |
        FLINK_PROPERTIES=
        taskmanager.numberOfTaskSlots: 2
    depends_on:
      - flink-jobmanager
    command: taskmanager

  flink-processor:
    build:
      context: ./flink_processor
    profiles:
        - disabled
    depends_on:
      - flink-jobmanager

  streamlit:
    build: ./streamlit_app
    ports:
      - "8501:8501"
    depends_on:
      - postgres

volumes:
  flink-state:
